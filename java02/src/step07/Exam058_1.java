// 인스턴스 생성 위치
package step07;

 public class Exam058_1 {

   public static void main(String[] args) {
  int[] arr1 = new int[]{10, 20, 30};
  int[] arr2 = new int[]{100,200,300,400,500};
  arr1 = arr2; // arr1에 저장된 주소를 잃어버린다.
  }
  }
 }





/*
# 가비지
- 주소를 잃어버려 사용할 수 없는 인스턴스를 말한다.
- "Dangling object"라고도 한다.

# 가비지 컬렉터
- 가비지를 수집하는 스레드 프로그램.
- 즉, 사용할 수 없는 인스턴스를 다른 용도로 사용하도록 강제로 메모리 해제한다.

- 작동
1) 메모리가 부족할 때,
os에게 메모리 추가 배당을 요구하기 전에
먼저 내부 메모리를 최대한 활요하기 위함.
2) cpu가 한가할 떄 (cpu idle time),
- 가비지가 발생하면 바로 가비지 컬렉터가 동작하는 것이 아니라
작동 규칙에 따라 동작할 뿐이다.

# 레퍼런스 테이블
- 인스턴스의 주소를 관리대장
- 인스턴스를 참조하는 레퍼런스가 추가될 때마다 레퍼런스 값을 증가 시키고
인스턴스를 참조하는 레퍼런스가 줄 때마다 값을 감소 시킨다.
- 값이 0일 때 가비지가 된다.

# dangling pinter
- 무효한 메모리의 주소를 가리키는 변수를 말한다.
- 자바는 이에 해당되지 않는다.




*/
